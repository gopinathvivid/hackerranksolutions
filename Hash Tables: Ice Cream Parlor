Each time Sunny and Johnny take a trip to the Ice Cream Parlor, they pool their money to buy ice cream. On any given day, the parlor offers a line of flavors. Each flavor has a cost associated with it.

Given the value of money and the cost of each flavor for t trips to the Ice Cream Parlor, help Sunny and Johnny choose two distinct flavors such that they spend their entire pool of money during each visit. ID numbers are the 1- based index number associated with a cost. For each trip to the parlor, print the ID numbers for the two types of ice cream that Sunny and Johnny purchase as two space-separated integers on a new line. You must print the smaller ID first and the larger ID second.

Solution in Java:

        /*  STDIN       FUNCTION
            4           money = 4
            5           cost[] size n = 5
            1 4 5 3 2   cost = [1, 4, 5, 3, 2] 
            
            STDOUT
            1 4
        */
    public static void whatFlavors(List<Integer> cost, int money) {        
        HashMap<Integer, Integer> hm = new HashMap<Integer, Integer>();
        for (int i = 0; i < cost.size(); i++) {
            if (cost.get(i) < money) {
                if (hm.containsKey(money - cost.get(i))) {
                    int index = hm.get(money - cost.get(i));
                    System.out.println((index+1) + " " + (i+1));
                    return;
                }
                else {
                    hm.put(cost.get(i), i);
                }
            }
        }
    }
